{"Name":"Push Google Cloud Metric to SecOps","Integration":"Google Cloud Metrics Loader","Script":"from SiemplifyJob import SiemplifyJob\nimport requests\nfrom datetime import datetime, timedelta\nimport json\nimport google.auth.transport.requests\nfrom google.oauth2 import service_account\n\n\nINTEGRATION_NAME = \"Google Cloud Metrics Loader\"\nSCRIPT_NAME = \"Push Google Cloud Metric to SecOps\"\n\nsiemplify = SiemplifyJob()\nsiemplify.script_name = SCRIPT_NAME # In order to use the SiemplifyLogger, you must assign a name to the script.\n    \n# INIT ACTION PARAMETERS:\ngcp_metrics_sa = siemplify.extract_job_param(param_name=\"Metrics Service Account JSON\", print_value=False)\ngcp_metrics_sa = json.loads(gcp_metrics_sa)\nsecops_sa = siemplify.extract_job_param(param_name=\"SecOps Ingestion API JSON\", print_value=False)\nsecops_sa = json.loads(secops_sa)\nproject = siemplify.extract_job_param(param_name=\"GCP Project Name\", print_value=True)\nmetric = siemplify.extract_job_param(param_name=\"Metric\", print_value=True)\ncustomer_id = siemplify.extract_job_param(param_name=\"SecOps Tenant ID\", print_value=True)\n\n\ndef main():\n\n    try:\n        # Current time\n        now = datetime.utcnow()\n\n        # Set the start time to 4 minutes from now. This should provide us the most recent metrics\n        start_time = now - timedelta(minutes=4)\n\n        # Define the filter for the requested metric\n        filter_ = (\n            metric\n        )\n\n         # URL for Monitoring API endpoint\n        url = f\"https://monitoring.googleapis.com/v3/projects/{project}/timeSeries?filter={filter_}&interval.startTime={start_time.isoformat()+'Z'}&interval.endTime={now.isoformat()+'Z'}&view=FULL\"\n\n        credentials = service_account.Credentials.from_service_account_info(\n            gcp_metrics_sa, scopes=['https://www.googleapis.com/auth/cloud-platform']\n        )\n        request = google.auth.transport.requests.Request()\n        credentials.refresh(request)\n        hdrs = {\n            \"Authorization\": \"Bearer \" + credentials.token,\n            \"Content-Type\": \"application/json\"\n             }\n        response = requests.get(url, headers=hdrs)\n        #siemplify.LOGGER.info(\"Metrics API response:\" + response.text)\n\n        if response.status_code == 200:\n            data = json.loads(response.text)\n            for time_series in data.get(\"timeSeries\", []):\n                siemplify.LOGGER.info(json.dumps(time_series, indent=1))\n                send_to_chronicle(time_series)\n        else:\n            print(f\"Error: {response.status_code} - {response.text}\")\n\n    except Exception as e:\n        siemplify.LOGGER.error(\"General error performing job {}\".format(SCRIPT_NAME))\n        siemplify.LOGGER.exception(e)\n        raise\n\n    siemplify.end_script()\n\ndef send_to_chronicle(log_line):\n    raw_event = {\n        \"customer_id\": customer_id,\n        \"log_type\": 'UDM',\n        \"entries\": [\n        {\n            \"log_text\": json.dumps(log_line)\n        }\n        ]\n    }\n\n    credentials = service_account.Credentials.from_service_account_info(\n        secops_sa,\n        scopes=['https://www.googleapis.com/auth/malachite-ingestion']\n        )\n    request = google.auth.transport.requests.Request()\n    credentials.refresh(request)\n    hd = {\n        \"Authorization\": \"Bearer \" + credentials.token,\n        \"Content-Type\": \"application/json\"\n    }\n    endpoint = 'https://malachiteingestion-pa.googleapis.com/v2/unstructuredlogentries:batchCreate'\n    req = requests.post(endpoint, headers=hd, json=raw_event)\n    siemplify.LOGGER.info(\"Ingest API response:\" + req.text)\n\n\nif __name__ == \"__main__\":\n    main()","Creator":"036fe879-4c16-461e-b6d9-b1c552806fa0","RunIntervalInSeconds":900,"Description":"","IsEnabled":true,"IsCustom":true,"Version":16,"IsSystem":false,"Parameters":[{"JobDefinitionId":132,"IsMandatory":true,"DefaultValue":"{}","Description":"Service account with 'monitoring.timeSeries.list' permission","Name":"Metrics Service Account JSON","Type":3},{"JobDefinitionId":132,"IsMandatory":true,"DefaultValue":"{}","Description":"Service account for Google SecOps Ingestion v2","Name":"SecOps Ingestion API JSON","Type":3},{"JobDefinitionId":132,"IsMandatory":true,"DefaultValue":"my-cloud-project","Description":"Project name to retrieve metrics from","Name":"GCP Project Name","Type":2},{"JobDefinitionId":132,"IsMandatory":true,"DefaultValue":"metric.type=\"compute.googleapis.com/instance/network/received_bytes_count\"","Description":"Google Cloud metric to retrieve: https://cloud.google.com/monitoring/api/metrics_gcp","Name":"Metric","Type":2},{"JobDefinitionId":132,"IsMandatory":true,"DefaultValue":"aaaa-bbbbb-ccccc-ddddddd","Description":"Tenant ID for Google SecOps","Name":"SecOps Tenant ID","Type":2}],"PythonVersion":"None"}